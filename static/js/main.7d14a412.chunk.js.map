{"version":3,"sources":["Components/Styles.jsx","Components/CreateData.jsx","Components/TextField.jsx","Views/Register/Register.jsx","Components/Table.jsx","Views/AllRegisters/AllRegisters.jsx","Components/Map/Map.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","textField","marginLeft","spacing","marginRight","width","button","margin","table","minWidth","rows","LayoutTextFields","classes","useState","name","setName","email","setEmail","birthday","setBirthday","React","open","setOpen","street","setStreet","numext","setNumext","colony","setColony","state","setState","className","noValidate","autoComplete","style","textAlign","justifyContent","flexDirection","TextField","id","label","placeholder","InputLabelProps","shrink","variant","onChange","e","target","value","type","defaultValue","fontSize","fontFamily","Collapse","in","Alert","action","IconButton","aria-label","color","size","onClick","severity","to","textDecoration","Button","sendIcon","Icon","localStorage","setItem","push","direction","createData","getItem","Register","SimpleTable","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","AllRegisters","Fab","MyMapComponent","compose","withProps","googleMapURL","loadingElement","height","containerElement","mapElement","withScriptjs","withGoogleMap","props","p","Map","lat","lng","navigator","geolocation","watchPosition","position","coords","latitude","longitude","err","console","log","enableHighAccuracy","timeout","maximumAge","alert","this","ref","bounds","window","google","maps","LatLngBounds","panTo","zoom","defaultCenter","isMarkerShown","Component","App","basename","process","exact","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"iSAEaA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CAC1CC,KAAM,CACJC,QAAS,OACTC,SAAU,QAEZC,UAAW,CACTC,WAAYL,EAAMM,QAAQ,GAC1BC,YAAaP,EAAMM,QAAQ,GAC3BE,MAAO,KAETC,OAAQ,CACNC,OAAQV,EAAMM,QAAQ,IAExBK,MAAO,CACLC,SAAU,S,kBCZT,IAAMC,EAAO,G,6CCUL,SAASC,IACtB,IAAMC,EAAUjB,IADyB,EAEjBkB,mBAAS,KAFQ,mBAElCC,EAFkC,KAE5BC,EAF4B,OAGfF,mBAAS,KAHM,mBAGlCG,EAHkC,KAG3BC,EAH2B,OAITJ,mBAAS,KAJA,mBAIlCK,EAJkC,KAIxBC,EAJwB,OAKjBC,IAAMP,UAAS,GALE,mBAKlCQ,EALkC,KAK5BC,EAL4B,OAMbT,mBAAS,KANI,mBAMlCU,EANkC,KAM1BC,EAN0B,OAObX,mBAAS,KAPI,mBAOlCY,EAPkC,KAO1BC,EAP0B,OAQbb,mBAAS,KARI,mBAQlCc,EARkC,KAQ1BC,EAR0B,OASff,mBAAS,KATM,mBASlCgB,EATkC,KAS3BC,EAT2B,KAYzC,OACE,0BACEC,UAAWnB,EAAQd,KAAMkC,YAAU,EAACC,aAAa,MACjDC,MAAO,CACLC,UAAU,SACVpC,QAAQ,OACRqC,eAAe,SACfC,cAAc,WAGhB,6BACE,kBAACC,EAAA,EAAD,CACMC,GAAG,sBACHC,MAAM,kBACNN,MAAO,CAAE3B,OAAQ,GACjBkC,YAAY,+BACZlC,OAAO,SACPmC,gBAAiB,CACfC,QAAQ,GAEVC,QAAQ,WACRC,SAAY,SAACC,GACT/B,EAAQ+B,EAAEC,OAAOC,UAG1B,kBAACV,EAAA,EAAD,CACKC,GAAG,sBACHC,MAAM,SACNN,MAAO,CAAE3B,OAAQ,GACjBkC,YAAY,sBACZlC,OAAO,SACPmC,gBAAiB,CACfC,QAAQ,GAEVC,QAAQ,WACRC,SAAY,SAACC,GACT7B,EAAS6B,EAAEC,OAAOC,UAG5B,kBAACV,EAAA,EAAD,CACMC,GAAG,OACHC,MAAM,sBACNS,KAAK,OACLf,MAAO,CAAE3B,OAAQ,GACjB2C,aAAa,aACbnB,UAAWnB,EAAQX,UACnByC,gBAAiB,CACfC,QAAQ,GACRC,QAAQ,WACRC,SAAY,SAACC,GACP3B,EAAY2B,EAAEC,OAAOC,UAGnC,6BACA,wBAAId,MAAO,CAACC,UAAU,SAAUgB,SAAS,OAAQC,WAAW,yBAA5D,iBACA,6BACQ,kBAACd,EAAA,EAAD,CACKE,MAAM,QACND,GAAG,yBACHR,UAAWnB,EAAQX,UACnBM,OAAO,SACPqC,QAAQ,WACRC,SAAY,SAACC,GACXtB,EAAUsB,EAAEC,OAAOC,UAG1B,kBAACV,EAAA,EAAD,CACIE,MAAM,UACND,GAAG,yBACHR,UAAWnB,EAAQX,UACnBM,OAAO,SACPqC,QAAQ,WACRC,SAAY,SAACC,GACXpB,EAAUoB,EAAEC,OAAOC,UAGzB,kBAACV,EAAA,EAAD,CACIE,MAAM,UACND,GAAG,yBACHR,UAAWnB,EAAQX,UACnBM,OAAO,SACPqC,QAAQ,WACRC,SAAY,SAACC,GACXlB,EAAUkB,EAAEC,OAAOC,UAGzB,kBAACV,EAAA,EAAD,CACIE,MAAM,SACND,GAAG,yBACHR,UAAWnB,EAAQX,UACnBM,OAAO,SACPqC,QAAQ,WACRC,SAAY,SAACC,GACS,OAAjBA,EAAEC,OAAOC,OAAyB,MAATlC,GAA2B,MAAVE,EAC3CM,EAAQD,IAENS,EAASgB,EAAEC,OAAOC,OAClB1B,GAAQ,SAO5B,6BACA,6BACA,6BACM,kBAAC+B,EAAA,EAAD,CAAUC,GAAIjC,EAAMa,MAAO,CAAC7B,MAAM,QAASE,OAAO,0BAChD,kBAACgD,EAAA,EAAD,CACEC,OACE,kBAACC,EAAA,EAAD,CACEC,aAAW,QACXC,MAAM,UACNC,KAAK,QACLC,QAAS,WACPvC,GAAQ,KAGV,kBAAC,IAAD,CAAW6B,SAAS,aAGxBP,QAAQ,WACRkB,SAAS,SAdX,mCAmBF,6BACA,kBAAC,IAAD,CAAMC,GAAG,aAAa7B,MAAO,CAAC8B,eAAe,SAEzC,kBAACC,EAAA,EAAD,CACIrB,QAAQ,YACRe,MAAM,YACN5B,UAAWnB,EAAQN,OACnB4D,SAAU,kBAACC,EAAA,EAAD,aACVN,QAAS,WACLO,aAAaC,QAAQ,kBAAmBvD,GACxCsD,aAAaC,QAAQ,iBAAkBrD,GACvCoD,aAAaC,QAAQ,sBAAuBnD,GAC5CkD,aAAaC,QAAQ,iBAAkB9C,GACvC6C,aAAaC,QAAQ,kBAAmB5C,GACxC2C,aAAaC,QAAQ,kBAAmB1C,GACxCyC,aAAaC,QAAQ,iBAAkBxC,GACvCnB,EAAK4D,KDxKtB,SAAoBxD,EAAME,EAAOE,EAAUqD,EAAW9C,EAAQE,EAAQE,GACzE,MAAO,CAAEf,OAAME,QAAOE,WAAUqD,YAAW9C,SAAQE,SAAQE,SCuK7B2C,CAAWJ,aAAaK,QAAQ,mBAAoBL,aAAaK,QAAQ,kBAAoBL,aAAaK,QAAQ,uBAAwBL,aAAaK,QAAQ,kBAAmBL,aAAaK,QAAQ,mBAAmBL,aAAaK,QAAQ,mBAAmBL,aAAaK,QAAQ,oBAClP,MAA5CL,aAAaK,QAAQ,oBAA0E,MAA3CL,aAAaK,QAAQ,mBAA6E,MAAhDL,aAAaK,QAAQ,uBAC5HnD,GAAQ,GAERA,GAAQ,KAjBlB,gBCrIGoD,MAlBnB,WAEQ,OACI,6BAAS3C,UAAU,mBACfG,MAAO,CACHnC,QAAQ,OACRqC,eAAe,SACfC,cAAc,WAElB,6BAAS,6BACT,wBAAIH,MAAO,CAACC,UAAU,SAAUgB,SAAS,OAAQC,WAAW,yBAA5D,yBACA,wBAAIlB,MAAO,CAACC,UAAU,SAAUgB,SAAS,OAAQC,WAAW,yBAA5D,qBACA,6BAAK,6BACL,kBAAC,EAAD,Q,+DCFD,SAASuB,IACtB,IAAM/D,EAAUjB,IAEhB,OACE,kBAACiF,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACC,EAAA,EAAD,CAAOhD,UAAWnB,EAAQJ,MAAOkD,aAAW,gBAC1C,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,UAAjB,sBACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,uBACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,gBACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,sBAGJ,kBAACC,EAAA,EAAD,KACG1E,EAAK2E,KAAI,SAAAC,GAAG,OACX,kBAACL,EAAA,EAAD,CAAUM,IAAKD,EAAIxE,MACf,kBAACoE,EAAA,EAAD,CAAWC,MAAM,SAASN,UAAU,KAAKW,MAAM,OAAOF,EAAIxE,MAC1D,kBAACoE,EAAA,EAAD,CAAWC,MAAM,UAAUG,EAAItE,OAC/B,kBAACkE,EAAA,EAAD,CAAWC,MAAM,UAAUG,EAAIpE,UAC/B,kBAACgE,EAAA,EAAD,CAAWC,MAAM,UAAUG,EAAIf,UAA/B,IAA2Ce,EAAI7D,OAA/C,IAAwD6D,EAAI3D,OAA5D,IAAqE2D,EAAIzD,OACzE,kBAACqD,EAAA,EAAD,CAAWC,MAAM,UACf,kBAAC,IAAD,CAAMpB,GAAG,aAAa7B,MAAO,CAAC8B,eAAe,SACzC,kBAACC,EAAA,EAAD,CACErB,QAAQ,YACRe,MAAM,YACNwB,MAAM,UAHR,yB,+BCjCP,SAASM,IACpB,OACI,yBAAKvD,MAAO,CAACC,UAAU,WACnB,qDACA,kBAAC,EAAD,MACA,6BACA,kBAAC,IAAD,CAAM4B,GAAG,KACL,kBAAC2B,EAAA,EAAD,CAAK/B,MAAM,YAAYD,aAAW,OAC9B,kBAAC,IAAD,S,+DCLPiC,EAAiBC,kBAC5BC,oBAAU,CACRC,aACE,kIACFC,eAAgB,yBAAK7D,MAAO,CAAE8D,OAAO,UACrCC,iBAAkB,yBAAK/D,MAAO,CAAE8D,OAAO,WACvCE,WAAY,yBAAKhE,MAAO,CAAE8D,OAAO,YAEnCG,eACCC,gBAT2BR,EAU5B,SAAAS,GAAK,OAAI,kBAAC,EAAD,CAAKC,EAAGD,OAEbE,E,YACJ,WAAYF,GAAQ,IAAD,8BACjB,4CAAMA,KAEDxE,MAAQ,CACX2E,KAAM,OACNC,IAAK,SALU,E,kFASE,IAAD,OACZC,UAAUC,YACdD,UAAUC,YAAYC,eAAc,SAACC,GACnC,EAAK/E,SAAS,CACZ0E,IAAKK,EAASC,OAAOC,SACrBN,IAAKI,EAASC,OAAOE,eAGzB,SAACC,GAAD,OAASC,QAAQC,IAAIF,KACrB,CAAEG,oBAAoB,EAAMC,QAAS,IAAOC,WAAY,MAIxDC,MAAM,oD,+BAIA,IAAD,OACCjB,EAAMkB,KAAKnB,MAAXC,EADD,EAEckB,KAAK3F,MAAlB2E,EAFD,EAECA,IAAKC,EAFN,EAEMA,IAEb,OADAS,QAAQC,IAAIX,EAAKC,GAEf,6BACE,kBAAC,YAAD,CACEgB,IAAK,SAAApC,GAEH,GADA,EAAKA,IAAMA,EACPA,GAAOmB,GAAOC,EAAK,CACrB,IAAMiB,EAAS,IAAIC,OAAOC,OAAOC,KAAKC,aAAa,CAAEtB,MAAKC,QAC1DS,QAAQC,IAAIO,GAEZrC,EAAI0C,MAAM,CAAEvB,MAAKC,UAGrBuB,KAAM,GACNC,cAAe,CAAEzB,MAAKC,QAErBH,EAAE4B,eACD,kBAAC,SAAD,CAAQrB,SAAU,CAAEL,MAAKC,UAI5BD,EAnBH,IAmBQ,6BACLC,O,GApDSrF,IAAM+G,WCJTC,MAVf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAUC,oBACd,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAI3D,UAAWH,IACjC,kBAAC,IAAD,CAAO8D,KAAK,aAAa3D,UAAWY,IACpC,kBAAC,IAAD,CAAO+C,KAAK,aAAa3D,UAAWc,MCDxB8C,QACW,cAA7Bd,OAAOe,SAASC,UAEe,UAA7BhB,OAAOe,SAASC,UAEhBhB,OAAOe,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBtC,WACrBA,UAAUuC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7d14a412.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    table: {\n      minWidth: 650,}\n  }));","\nexport function createData(name, email, birthday, direction, numext, colony, state) {\n    return { name, email, birthday, direction, numext, colony, state};\n  }\nexport const rows = []","import React, { useState } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport {useStyles} from './Styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport {createData, rows} from '../Components/CreateData';\nimport Alert from '@material-ui/lab/Alert';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nexport default function LayoutTextFields() {\n  const classes = useStyles();\n  const [name, setName] = useState(' ');\n  const [email, setEmail] = useState(' ');\n  const [birthday, setBirthday] = useState(' ');\n  const [open, setOpen] = React.useState(true);\n  const [street, setStreet] = useState(' ');\n  const [numext, setNumext] = useState(' ');\n  const [colony, setColony] = useState(' ');\n  const [state, setState] = useState(' ');\n\n\n  return (\n    <form \n      className={classes.root} noValidate autoComplete=\"off\" \n      style={{\n        textAlign:\"center\",\n        display:\"flex\", \n        justifyContent:\"center\",\n        flexDirection:\"column\"\n      }}\n      >\n      <div>\n        <TextField\n              id=\"outlined-full-width\"\n              label=\"Nombre completo\"\n              style={{ margin: 8 }}\n              placeholder=\"Introduce tu nombre completo\"\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              onChange = {(e)=>{\n                  setName(e.target.value) \n              }}\n        />\n         <TextField\n              id=\"outlined-full-width\"\n              label=\"Correo\"\n              style={{ margin: 8 }}\n              placeholder=\"Introduce tu correo\"\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              onChange = {(e)=>{\n                  setEmail(e.target.value)  \n              }}\n        />\n        <TextField\n              id=\"date\"\n              label=\"Fecha de nacimiento\"\n              type=\"date\"\n              style={{ margin: 8 }}\n              defaultValue=\"2020-01-01\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,}}\n                variant=\"outlined\"\n                onChange = {(e)=>{\n                      setBirthday(e.target.value)\n                }}\n        />\n        <br></br>\n        <h1 style={{textAlign:\"center\", fontSize:\"20px\", fontFamily:\"'Roboto', sans-serif\"}}>Dirección:</h1>\n        <div>\n                <TextField\n                     label=\"Calle\"\n                     id=\"outlined-margin-normal\"\n                     className={classes.textField}\n                     margin=\"normal\"\n                     variant=\"outlined\"\n                     onChange = {(e)=>{\n                       setStreet(e.target.value)\n                     }}\n                />\n                <TextField\n                    label=\"Num ext\"\n                    id=\"outlined-margin-normal\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange = {(e)=>{\n                      setNumext(e.target.value)\n                    }}\n                />\n                <TextField\n                    label=\"Colonia\"\n                    id=\"outlined-margin-normal\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange = {(e)=>{\n                      setColony(e.target.value)\n                    }}\n                />\n                <TextField\n                    label=\"Estado\"\n                    id=\"outlined-margin-normal\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange = {(e)=>{\n                      if(e.target.value===null || name === ' ' ||  email === ' '){\n                        setOpen(open)\n                      }else{\n                          setState(e.target.value)\n                          setOpen(false)\n                        }\n                    }}\n                />\n\n        </div>\n      </div>\n      <br></br>\n      <br></br>\n      <div>\n            <Collapse in={open} style={{width:\"70rem\", margin:\"0rem 2rem 2rem 4.5rem\"}}>\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                    >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                variant=\"outlined\" \n                severity=\"error\"\n              >\n                Introduce los campos faltantes\n              </Alert>\n            </Collapse>\n            <br></br>\n            <Link to=\"/registros\" style={{textDecoration:\"none\"}}>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    sendIcon={<Icon>send</Icon>}\n                    onClick={()=>{\n                        localStorage.setItem(\"nombredeusuario\", name);\n                        localStorage.setItem(\"emaildeusuario\", email);\n                        localStorage.setItem(\"nacimientodeusuario\", birthday);\n                        localStorage.setItem(\"calledeusuario\", street);\n                        localStorage.setItem(\"numextdeusuario\", numext);\n                        localStorage.setItem(\"colonydeusuario\", colony);\n                        localStorage.setItem(\"statedeusuario\", state);\n                        rows.push(createData(localStorage.getItem(\"nombredeusuario\"), localStorage.getItem(\"emaildeusuario\") , localStorage.getItem(\"nacimientodeusuario\"), localStorage.getItem(\"calledeusuario\"), localStorage.getItem(\"numextdeusuario\"),localStorage.getItem(\"colonydeusuario\"),localStorage.getItem(\"statedeusuario\")))\n                        if(localStorage.getItem(\"nombredeusuario\") !== \" \" &&  localStorage.getItem(\"emaildeusuario\") !== \" \" && localStorage.getItem(\"nacimientodeusuario\") !== \" \"){\n                          setOpen(false)\n                        }else{\n                          setOpen(true)\n                        }\n\n                    }}\n\n                >\n                Registrar\n                </Button>\n\n            </Link>\n      </div>\n    </form>\n  );\n}","import React from 'react';\n\nimport TextField from '../../Components/TextField';\n\n\nfunction Register (){\n       \n        return (\n            <section className=\"section-register\" \n                style={{\n                    display:\"flex\", \n                    justifyContent:\"center\",\n                    flexDirection:\"column\",\n                }}>\n                <br></br><br></br>\n                <h1 style={{textAlign:\"center\", fontSize:\"30px\", fontFamily:\"'Roboto', sans-serif\"}}>Registro de empleados</h1>\n                <h2 style={{textAlign:\"center\", fontSize:\"20px\", fontFamily:\"'Roboto', sans-serif\"}}>Datos personales:</h2>\n                <br/><br/>\n                <TextField/>\n            </section>\n        )\n    }\n\n    export default Register;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport {useStyles} from './Styles';\nimport {rows} from './CreateData';\n\n\n\nexport default function SimpleTable() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Nombre de empleado</TableCell>\n            <TableCell align=\"center\">Email</TableCell>\n            <TableCell align=\"center\">Fecha de nacimiento</TableCell>\n            <TableCell align=\"center\">Dirección</TableCell>\n            <TableCell align=\"center\">Ver ubicación</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">{row.name}</TableCell>\n                <TableCell align=\"center\">{row.email}</TableCell>\n                <TableCell align=\"center\">{row.birthday}</TableCell>\n                <TableCell align=\"center\">{row.direction},{row.numext},{row.colony},{row.state}</TableCell>\n                <TableCell align=\"center\">\n                  <Link to=\"/ubicacion\" style={{textDecoration:\"none\"}}>\n                      <Button  \n                        variant=\"contained\"\n                        color=\"secondary\"\n                        align=\"center\"\n                        >Ubicación</Button>\n                  </Link>\n                </TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Table from '../../Components/Table';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nexport default function AllRegisters (){\n    return(\n        <div style={{textAlign:\"center\"}}>\n            <h1>Registro de empleados</h1>\n            <Table/>\n            <br></br>\n            <Link to=\"/\">\n                <Fab color=\"secondary\" aria-label=\"add\">\n                    <AddIcon />\n                </Fab> \n            </Link>\n        </div>\n    )\n}","import React from \"react\";\n//import ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\nexport const MyMapComponent = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyC5MktJlULerOZZM3lh1tJRaRyQAkxbSh4&v&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withScriptjs,\n   withGoogleMap\n)(props => <Map p={props} />);\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lat: -34.397,\n      lng: 150.644,\n    };\n  }\n\n  componentWillMount(){\n    if (!!navigator.geolocation) {\n      navigator.geolocation.watchPosition((position) => {\n        this.setState({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      },\n      (err) => console.log(err),\n      { enableHighAccuracy: true, timeout: 10000, maximumAge: 10000 },\n      );\n    } else {\n      //  // No Support Web\n      alert('El navegador no soporta la geolocalización,')\n    }\n  }\n\n  render() {\n    const { p } = this.props;\n    const { lat, lng } = this.state;\n    console.log(lat, lng)\n    return (\n      <div>\n        <GoogleMap\n          ref={map => {\n            this.map = map;\n            if (map && lat && lng) {\n              const bounds = new window.google.maps.LatLngBounds({ lat, lng });\n              console.log(bounds);\n              //map.fitBounds(bounds);\n              map.panTo({ lat, lng });\n            }\n          }}\n          zoom={16}\n          defaultCenter={{ lat, lng }}\n        >\n          {p.isMarkerShown && (\n            <Marker position={{ lat, lng }} \n            />\n          )}\n        </GoogleMap>\n        {lat} <br />\n        {lng}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Register from './Views/Register/Register';\nimport AllRegisters from './Views/AllRegisters/AllRegisters';\nimport {MyMapComponent} from './Components/Map/Map';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path='/' component={Register} />\n        <Route path='/registros' component={AllRegisters} />\n        <Route path='/ubicacion' component={MyMapComponent}/>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}